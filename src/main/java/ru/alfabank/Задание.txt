Трекер задач:
Необходимо реализовать логику работы трекера задач.
Есть несколько сущностей:
    1. Task (задача) - у задачи есть следующие свойства
    2. Epic (эпик) - большая задача, которая обязательно содержит подзадачи
    3. Sub-task (подзадача) - "маленькая" задача, которая обязательно относится к какому-то эпику

Общие поля для всех сущностей:
    1. Уникальный номер задачи, для поиска и обработки
    2. Название, отражающее суть задачи
    3. Описание, где указаны детали
    4. Статус задачи (перечисление) - этапы жизненного цикла задачи -
        - "TO DO" - задача новая, ее еще не выполняют
        - "IN PROGRESS" - задача в работе
        - "DONE" - задача выполнена

Необходимо реализовать класс Developer (разработчик) который будет управлять задачами. Что нужно уметь делать:
    1. Хранить задачи любого типа. Нужно выбрать и заиспользовать необходимые коллекции
    2. Методы (должны быть доступны каждому типу задач):
        2.1 Получение списка всех задач
        2.2 Удаление всех задач
        2.3 Создание задачи
        2.4 Получение задачи по номеру(id)
        2.5 Обновление задачи (например, обновить описание или название)
        2.6 Удаление конкретной задачи
        2.7 Получение всех задач по конкретному эпику (Epic)
    3. Для статусов:
        3.1 Для обычных задач разработчик может менять статусы как угодно
        3.2 Если все подзадачи эпика имеют статус TO DO, то эпик может быть только в статусе TO DO
        3.3 Если все подзадачи эпика имеют статус DONE, то эпик может быть только в статусе DONE
        3.4 Во всех остальных случаях статус эпика - IN PROGRESS

В классе Developer реализуйте необходимые методы, в классе Main в методе main вызовите все написанные
методы класса Developer в нужной последовательности и с нужными параметрами для проверки функциональности